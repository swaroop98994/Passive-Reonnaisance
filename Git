#!/usr/bin/env python3

import sys
import argparse
import os
import subprocess

def main():
    parser = argparse.ArgumentParser(description='Perform passive reconnaissance on a target.')
    parser.add_argument('target', metavar='TARGET', type=str, help='the target to perform reconnaissance on')
    parser.add_argument('-o', '--output', metavar='OUTPUT', type=str, help='output file to write results to')
    args = parser.parse_args()

    # Create output file if specified
    if args.output:
        try:
            open(args.output, 'w').close()
        except IOError:
            print('Error creating output file: {}'.format(args.output))
            sys.exit(1)

    # Run passive reconnaissance commands
    commands = [
        'whois {}'.format(args.target),
        'nslookup {}'.format(args.target),
        'dig {}'.format(args.target),
        'host {}'.format(args.target),
        'traceroute {}'.format(args.target),
        'curl -I {}'.format(args.target)
    ]
    for cmd in commands:
        try:
            output = subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)
            print(output.decode('utf-8'))
            if args.output:
                with open(args.output, 'a') as f:
                    f.write(output.decode('utf-8'))
        except subprocess.CalledProcessError as e:
            print('Error running command: {}'.format(cmd))
            if args.output:
                with open(args.output, 'a') as f:
                    f.write('Error running command: {}\n'.format(cmd))
                f.write(e.output.decode('utf-8'))

if __name__ == '__main__':
    main()
